Perfecto. Vamos a construir un modelo **limpio y funcional** para un sistema cl√≠nico b√°sico (como un centro oftalmol√≥gico) que:

* Registra **usuarios** (clientes y doctores)
* Permite **agendar citas**
* Guarda el **diagn√≥stico** y tipo de **consulta**
* Lleva un peque√±o **historial m√©dico**
* Administra los **horarios disponibles**

---

## ‚úÖ Tablas necesarias

A continuaci√≥n, dise√±o las tablas **m√≠nimas y necesarias**, optimizadas para un sistema m√©dico funcional, incluyendo relaciones clave.

---

### üöÄ **Script de base de datos limpio y funcional**

```sql
CREATE DATABASE dlytime;
USE dlytime;

-- Tipos de documento (C√©dula, Pasaporte, etc.)
CREATE TABLE id_type (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(35) NOT NULL
);

-- Roles de usuario (cliente, doctor, admin, etc.)
CREATE TABLE role (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(20) NOT NULL
);

-- Persona (cliente, doctor, etc.)
CREATE TABLE person (
    document_number INT PRIMARY KEY,
    first_name VARCHAR(30) NOT NULL,
    last_name VARCHAR(30) NOT NULL,
    email VARCHAR(50) NOT NULL UNIQUE,
    phone VARCHAR(15),
    password VARCHAR(61) NOT NULL,
    birth_date DATE,
    gender ENUM('Male', 'Female', 'Other') NOT NULL,
    address VARCHAR(100),
    status ENUM('Active', 'Inactive') DEFAULT 'Active',
    role_id INT NOT NULL,
    id_type_id INT NOT NULL,
    FOREIGN KEY (role_id) REFERENCES role(id),
    FOREIGN KEY (id_type_id) REFERENCES id_type(id)
);

-- Diagn√≥stico (enfermedad, condici√≥n, etc.)
CREATE TABLE diagnosis (
    id INT AUTO_INCREMENT PRIMARY KEY,
    description VARCHAR(300) NOT NULL
);

-- Tipos de consulta (General, Especializada, etc.)
CREATE TABLE consultation_type (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(30) NOT NULL
);

-- Horarios disponibles
CREATE TABLE schedule (
    id INT AUTO_INCREMENT PRIMARY KEY,
    appointment_date DATE NOT NULL,
    appointment_time TIME NOT NULL,
    status ENUM('Available', 'Reserved', 'Cancelled') NOT NULL DEFAULT 'Available'
);

-- Citas agendadas
CREATE TABLE appointment (
    id INT AUTO_INCREMENT PRIMARY KEY,
    client_document_number INT NOT NULL,
    doctor_document_number INT NOT NULL,
    FOREIGN KEY (client_document_number) REFERENCES person(document_number),
    FOREIGN KEY (doctor_document_number) REFERENCES person(document_number)
);

-- Detalles de la cita (relaciona consulta, horario, diagn√≥stico)
CREATE TABLE appointment_detail (
    id INT AUTO_INCREMENT PRIMARY KEY,
    appointment_id INT NOT NULL,
    diagnosis_id INT,
    consultation_type_id INT NOT NULL,
    schedule_id INT NOT NULL,
    status ENUM('Scheduled', 'Completed', 'Cancelled') DEFAULT 'Scheduled',
    location VARCHAR(100),
    notes TEXT,
    FOREIGN KEY (appointment_id) REFERENCES appointment(id),
    FOREIGN KEY (diagnosis_id) REFERENCES diagnosis(id),
    FOREIGN KEY (consultation_type_id) REFERENCES consultation_type(id),
    FOREIGN KEY (schedule_id) REFERENCES schedule(id)
);

-- Historial m√©dico por paciente
CREATE TABLE medical_history (
    id INT AUTO_INCREMENT PRIMARY KEY,
    patient_document_number INT NOT NULL,
    diagnosis_id INT NOT NULL,
    recorded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    notes TEXT,
    FOREIGN KEY (patient_document_number) REFERENCES person(document_number),
    FOREIGN KEY (diagnosis_id) REFERENCES diagnosis(id)
);
```

---

## üì¶ Contenido de este modelo

| Tabla                | Contiene                                        |
| -------------------- | ----------------------------------------------- |
| `id_type`            | Tipo de documento (ej. C√©dula, Pasaporte)       |
| `role`               | Rol del usuario (Cliente, Doctor, Admin)        |
| `person`             | Personas del sistema                            |
| `diagnosis`          | Enfermedades o condiciones                      |
| `consultation_type`  | Tipo de consulta (Ej. General, Especializada)   |
| `schedule`           | Fechas y horas disponibles                      |
| `appointment`        | Relaci√≥n cliente <-> doctor                     |
| `appointment_detail` | Detalles de la cita: tipo, horario, diagn√≥stico |
| `medical_history`    | Diagn√≥sticos pasados del paciente               |

---

### ‚úÖ ¬øListo para usar?

S√≠. Puedes trabajar con esta estructura desde ya. Est√° pensada para:

* Consultas m√©dicas
* Especialistas por documento
* Horarios disponibles
* Gesti√≥n de diagn√≥sticos
* Historial cl√≠nico b√°sico

---

¬øQuieres que te agregue algunos **datos de prueba (`INSERT`)** para verificar que funciona correctamente? ¬øO te genero el **diagrama visual (ERD)** para verlo gr√°ficamente?
